<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enderlook.Unity.Atoms</name>
    </assembly>
    <members>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Transformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Transformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Transformer.CreateTransformerPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerClamp.Transform(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.ByteGetReference,Enderlook.Unity.Atoms.ByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerClamp.Transform(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.DecimalGetReference,Enderlook.Unity.Atoms.DecimalGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.DecimalGetReference,System.Boolean,Enderlook.Unity.Atoms.DecimalGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="exclusiveMax">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <param name="exclusiveMin">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerClamp.Transform(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.DoubleGetReference,Enderlook.Unity.Atoms.DoubleGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.DoubleGetReference,System.Boolean,Enderlook.Unity.Atoms.DoubleGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="exclusiveMax">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <param name="exclusiveMin">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerClamp.Transform(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.FloatGetReference,Enderlook.Unity.Atoms.FloatGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.FloatGetReference,System.Boolean,Enderlook.Unity.Atoms.FloatGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="exclusiveMax">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <param name="exclusiveMin">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerClamp.Transform(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.IntGetReference,Enderlook.Unity.Atoms.IntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerClamp.Transform(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.LongGetReference,Enderlook.Unity.Atoms.LongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerClamp.Transform(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.SByteGetReference,Enderlook.Unity.Atoms.SByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerClamp.Transform(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.ShortGetReference,Enderlook.Unity.Atoms.ShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerClamp.Transform(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.UIntGetReference,Enderlook.Unity.Atoms.UIntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerClamp.Transform(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.ULongGetReference,Enderlook.Unity.Atoms.ULongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerClamp.Transform(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerClamp.CreateClamp(Enderlook.Unity.Atoms.UShortGetReference,Enderlook.Unity.Atoms.UShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerClamp"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortTransformerClamp"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerClamp.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerFunction.Transform(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerFunction.CreateFunctionHolder(System.Func{System.Boolean,System.Boolean})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.BoolTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.BoolTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.BoolTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerFunction.Transform(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerFunction.CreateFunctionHolder(System.Func{System.Byte,System.Byte})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerFunction.Transform(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerFunction.CreateFunctionHolder(System.Func{System.Char,System.Char})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.CharTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.CharTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.CharTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerFunction.Transform(UnityEngine.Collider2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Collider2D,UnityEngine.Collider2D})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerFunction.Transform(UnityEngine.Collider)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Collider,UnityEngine.Collider})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerFunction.Transform(UnityEngine.Color)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Color,UnityEngine.Color})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColorTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.ColorTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColorTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerFunction.Transform(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerFunction.CreateFunctionHolder(System.Func{System.Decimal,System.Decimal})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerFunction.Transform(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerFunction.CreateFunctionHolder(System.Func{System.Double,System.Double})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerFunction.Transform(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerFunction.CreateFunctionHolder(System.Func{System.Single,System.Single})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerFunction.Transform(UnityEngine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.GameObject,UnityEngine.GameObject})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerFunction.Transform(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerFunction.CreateFunctionHolder(System.Func{System.Int32,System.Int32})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.IntTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerFunction.Transform(UnityEngine.LayerMask)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.LayerMask,UnityEngine.LayerMask})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerFunction.Transform(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerFunction.CreateFunctionHolder(System.Func{System.Int64,System.Int64})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.LongTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerFunction.Transform(UnityEngine.Quaternion)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Quaternion,UnityEngine.Quaternion})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerFunction.Transform(UnityEngine.Rect)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Rect,UnityEngine.Rect})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RectTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.RectTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RectTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction.Transform(UnityEngine.Rigidbody2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Rigidbody2D,UnityEngine.Rigidbody2D})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerFunction.Transform(UnityEngine.Rigidbody)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Rigidbody,UnityEngine.Rigidbody})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerFunction.Transform(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerFunction.CreateFunctionHolder(System.Func{System.SByte,System.SByte})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerFunction.Transform(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerFunction.CreateFunctionHolder(System.Func{System.Int16,System.Int16})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerFunction.Transform(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerFunction.CreateFunctionHolder(System.Func{System.String,System.String})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.StringTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.StringTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.StringTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerFunction.Transform(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerFunction.CreateFunctionHolder(System.Func{System.UInt32,System.UInt32})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerFunction.Transform(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerFunction.CreateFunctionHolder(System.Func{System.UInt64,System.UInt64})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerFunction.Transform(UnityEngine.Events.UnityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityEvent})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerFunction.Transform(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerFunction.CreateFunctionHolder(System.Func{System.UInt16,System.UInt16})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerFunction.Transform(UnityEngine.Vector2Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Vector2Int,UnityEngine.Vector2Int})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerFunction.Transform(UnityEngine.Vector2)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Vector2,UnityEngine.Vector2})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerFunction.Transform(UnityEngine.Vector3Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Vector3Int,UnityEngine.Vector3Int})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerFunction.Transform(UnityEngine.Vector3)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Vector3,UnityEngine.Vector3})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerFunction.Transform(UnityEngine.Vector4)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerFunction.CreateFunctionHolder(System.Func{UnityEngine.Vector4,UnityEngine.Vector4})">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerFunction"/> to store the function <paramref name="function"/>.
            </summary>
            <param name="function">Function to execute by the new <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerFunction"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerFunction"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerFunction.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerGroup.Transform(System.Boolean)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.BoolTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.BoolTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.BoolTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.BoolTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.BoolTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.BoolTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.BoolTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerGroup.Transform(System.Byte)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.ByteTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.ByteTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.ByteTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.ByteTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerGroup.Transform(System.Char)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.CharTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.CharTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.CharTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.CharTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.CharTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.CharTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.CharTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerGroup.Transform(UnityEngine.Collider2D)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.Collider2DTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Collider2DTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Collider2DTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Collider2DTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerGroup.Transform(UnityEngine.Collider)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.ColliderTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.ColliderTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.ColliderTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.ColliderTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColliderTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerGroup.Transform(UnityEngine.Color)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.ColorTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.ColorTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.ColorTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.ColorTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColorTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.ColorTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColorTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerGroup.Transform(System.Decimal)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.DecimalTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.DecimalTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.DecimalTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.DecimalTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerGroup.Transform(System.Double)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.DoubleTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.DoubleTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.DoubleTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.DoubleTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerGroup.Transform(System.Single)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.FloatTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.FloatTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.FloatTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.FloatTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerGroup.Transform(UnityEngine.GameObject)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.GameObjectTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.GameObjectTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.GameObjectTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.GameObjectTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerGroup.Transform(System.Int32)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.IntTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.IntTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.IntTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.IntTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.IntTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerGroup.Transform(UnityEngine.LayerMask)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.LayerMaskTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.LayerMaskTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.LayerMaskTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LayerMaskTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerGroup.Transform(System.Int64)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.LongTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.LongTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.LongTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.LongTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.LongTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerGroup.Transform(UnityEngine.Quaternion)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.QuaternionTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.QuaternionTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.QuaternionTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.QuaternionTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerGroup.Transform(UnityEngine.Rect)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.RectTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.RectTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.RectTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.RectTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RectTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.RectTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RectTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup.Transform(UnityEngine.Rigidbody2D)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Rigidbody2DTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerGroup.Transform(UnityEngine.Rigidbody)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.RigidbodyTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.RigidbodyTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.RigidbodyTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RigidbodyTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerGroup.Transform(System.SByte)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.SByteTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.SByteTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.SByteTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.SByteTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerGroup.Transform(System.Int16)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.ShortTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.ShortTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.ShortTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.ShortTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerGroup.Transform(System.String)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.StringTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.StringTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.StringTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.StringTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.StringTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.StringTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.StringTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerGroup.Transform(System.UInt32)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.UIntTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.UIntTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.UIntTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.UIntTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerGroup.Transform(System.UInt64)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.ULongTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.ULongTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.ULongTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.ULongTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerGroup.Transform(UnityEngine.Events.UnityEvent)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.UnityEventTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.UnityEventTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.UnityEventTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UnityEventTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerGroup.Transform(System.UInt16)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.UShortTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.UShortTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.UShortTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.UShortTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerGroup.Transform(UnityEngine.Vector2Int)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.Vector2IntTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Vector2IntTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Vector2IntTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2IntTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerGroup.Transform(UnityEngine.Vector2)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Vector2Transformer"/> from <see cref="F:Enderlook.Unity.Atoms.Vector2TransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Vector2TransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Vector2Transformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2TransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2TransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerGroup.Transform(UnityEngine.Vector3Int)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformer"/> from <see cref="F:Enderlook.Unity.Atoms.Vector3IntTransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Vector3IntTransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Vector3IntTransformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3IntTransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntTransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerGroup.Transform(UnityEngine.Vector3)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Vector3Transformer"/> from <see cref="F:Enderlook.Unity.Atoms.Vector3TransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Vector3TransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Vector3Transformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3TransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3TransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerGroup.Transform(UnityEngine.Vector4)">
            <summary>
            Execute all the <see cref="T:Enderlook.Unity.Atoms.Vector4Transformer"/> from <see cref="F:Enderlook.Unity.Atoms.Vector4TransformerGroup.transformers"/>.<br/>
            In addition, it removes any <see langword="null"/> element from <see cref="F:Enderlook.Unity.Atoms.Vector4TransformerGroup.transformers"/>.
            </summary>
            <param name="value">Value passed to first transformer to execute.</param>
            <returns>Result of last transformer.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerGroup.CreateFunctionChain(Enderlook.Unity.Atoms.Vector4Transformer[])">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerGroup"/> with the given transformers in <paramref name="transformers"/>.
            </summary>
            <param name="transformers">Functions executed in order by the new <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerGroup"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector4TransformerGroup"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4TransformerGroup.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMax.Transform(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMax.CreateMax(Enderlook.Unity.Atoms.ByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMax.Transform(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMax.CreateMax(Enderlook.Unity.Atoms.DecimalGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMax.CreateMax(Enderlook.Unity.Atoms.DecimalGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <param name="exclusive">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMax.Transform(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMax.CreateMax(Enderlook.Unity.Atoms.DoubleGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMax.CreateMax(Enderlook.Unity.Atoms.DoubleGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <param name="exclusive">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMax.Transform(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMax.CreateMax(Enderlook.Unity.Atoms.FloatGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMax.CreateMax(Enderlook.Unity.Atoms.FloatGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <param name="exclusive">Whenever <paramref name="max"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMax.Transform(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMax.CreateMax(Enderlook.Unity.Atoms.IntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMax.Transform(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMax.CreateMax(Enderlook.Unity.Atoms.LongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMax.Transform(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMax.CreateMax(Enderlook.Unity.Atoms.SByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMax.Transform(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMax.CreateMax(Enderlook.Unity.Atoms.ShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMax.Transform(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMax.CreateMax(Enderlook.Unity.Atoms.UIntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMax.Transform(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMax.CreateMax(Enderlook.Unity.Atoms.ULongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMax.Transform(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMax.CreateMax(Enderlook.Unity.Atoms.UShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerMax"/>.
            </summary>
            <param name="max">Maximum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortTransformerMax"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMax.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMin.Transform(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMin.CreateMin(Enderlook.Unity.Atoms.ByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMin.Transform(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMin.CreateMin(Enderlook.Unity.Atoms.DecimalGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMin.CreateMin(Enderlook.Unity.Atoms.DecimalGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="exclusive">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMin.Transform(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMin.CreateMin(Enderlook.Unity.Atoms.DoubleGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMin.CreateMin(Enderlook.Unity.Atoms.DoubleGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="exclusive">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMin.Transform(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMin.CreateMin(Enderlook.Unity.Atoms.FloatGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMin.CreateMin(Enderlook.Unity.Atoms.FloatGetReference,System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="exclusive">Whenever <paramref name="min"/> value is exclusive or inclusive.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMin.Transform(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMin.CreateMin(Enderlook.Unity.Atoms.IntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMin.Transform(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMin.CreateMin(Enderlook.Unity.Atoms.LongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMin.Transform(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMin.CreateMin(Enderlook.Unity.Atoms.SByteGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMin.Transform(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMin.CreateMin(Enderlook.Unity.Atoms.ShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMin.Transform(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMin.CreateMin(Enderlook.Unity.Atoms.UIntGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMin.Transform(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMin.CreateMin(Enderlook.Unity.Atoms.ULongGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMin.Transform(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMin.CreateMin(Enderlook.Unity.Atoms.UShortGetReference)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortTransformerMin"/>.
            </summary>
            <param name="min">Minimum value.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortTransformerMin"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortTransformerMin.CreateTransformerPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolConstant.CreateConstant(System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.BoolConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.BoolConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.BoolConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolVariable.SetValue(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolVariable.SetValueInternal(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolVariable.CreateVariable(System.Boolean)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.BoolVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.BoolVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.BoolVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteConstant.CreateConstant(System.Byte)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ByteConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteVariable.SetValue(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteVariable.SetValueInternal(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteVariable.CreateVariable(System.Byte)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ByteVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ByteVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ByteVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharConstant.CreateConstant(System.Char)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.CharConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.CharConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.CharConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharVariable.SetValue(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharVariable.SetValueInternal(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharVariable.CreateVariable(System.Char)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.CharVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.CharVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.CharVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DConstant.CreateConstant(UnityEngine.Collider2D)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Collider2DConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Collider2DConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Collider2DConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DVariable.SetValue(UnityEngine.Collider2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DVariable.SetValueInternal(UnityEngine.Collider2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DVariable.CreateVariable(UnityEngine.Collider2D)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Collider2DVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Collider2DVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Collider2DVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderConstant.CreateConstant(UnityEngine.Collider)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColliderConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ColliderConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColliderConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderVariable.SetValue(UnityEngine.Collider)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderVariable.SetValueInternal(UnityEngine.Collider)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderVariable.CreateVariable(UnityEngine.Collider)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColliderVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ColliderVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColliderVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorConstant.CreateConstant(UnityEngine.Color)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColorConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ColorConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColorConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorVariable.SetValue(UnityEngine.Color)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorVariable.SetValueInternal(UnityEngine.Color)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorVariable.CreateVariable(UnityEngine.Color)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ColorVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ColorVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ColorVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalConstant.CreateConstant(System.Decimal)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.DecimalConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalVariable.SetValue(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalVariable.SetValueInternal(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalVariable.CreateVariable(System.Decimal)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DecimalVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.DecimalVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DecimalVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleConstant.CreateConstant(System.Double)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.DoubleConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleVariable.SetValue(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleVariable.SetValueInternal(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleVariable.CreateVariable(System.Double)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.DoubleVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.DoubleVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.DoubleVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatConstant.CreateConstant(System.Single)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.FloatConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatVariable.SetValue(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatVariable.SetValueInternal(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatVariable.CreateVariable(System.Single)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.FloatVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.FloatVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.FloatVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectConstant.CreateConstant(UnityEngine.GameObject)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.GameObjectConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.GameObjectConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.GameObjectConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectVariable.SetValue(UnityEngine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectVariable.SetValueInternal(UnityEngine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectVariable.CreateVariable(UnityEngine.GameObject)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.GameObjectVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.GameObjectVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.GameObjectVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntConstant.CreateConstant(System.Int32)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.IntConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntVariable.SetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntVariable.SetValueInternal(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntVariable.CreateVariable(System.Int32)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.IntVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.IntVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.IntVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskConstant.CreateConstant(UnityEngine.LayerMask)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LayerMaskConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.LayerMaskConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LayerMaskConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskVariable.SetValue(UnityEngine.LayerMask)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskVariable.SetValueInternal(UnityEngine.LayerMask)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskVariable.CreateVariable(UnityEngine.LayerMask)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LayerMaskVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.LayerMaskVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LayerMaskVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongConstant.CreateConstant(System.Int64)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.LongConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongVariable.SetValue(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongVariable.SetValueInternal(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongVariable.CreateVariable(System.Int64)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.LongVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.LongVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.LongVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionConstant.CreateConstant(UnityEngine.Quaternion)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.QuaternionConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.QuaternionConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.QuaternionConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionVariable.SetValue(UnityEngine.Quaternion)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionVariable.SetValueInternal(UnityEngine.Quaternion)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionVariable.CreateVariable(UnityEngine.Quaternion)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.QuaternionVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.QuaternionVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.QuaternionVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectConstant.CreateConstant(UnityEngine.Rect)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RectConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.RectConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RectConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectVariable.SetValue(UnityEngine.Rect)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectVariable.SetValueInternal(UnityEngine.Rect)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectVariable.CreateVariable(UnityEngine.Rect)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RectVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.RectVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RectVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DConstant.CreateConstant(UnityEngine.Rigidbody2D)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DVariable.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DVariable.SetValueInternal(UnityEngine.Rigidbody2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DVariable.CreateVariable(UnityEngine.Rigidbody2D)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyConstant.CreateConstant(UnityEngine.Rigidbody)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RigidbodyConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.RigidbodyConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RigidbodyConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyVariable.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyVariable.SetValueInternal(UnityEngine.Rigidbody)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyVariable.CreateVariable(UnityEngine.Rigidbody)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.RigidbodyVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.RigidbodyVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.RigidbodyVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteConstant.CreateConstant(System.SByte)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.SByteConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteVariable.SetValue(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteVariable.SetValueInternal(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteVariable.CreateVariable(System.SByte)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.SByteVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.SByteVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.SByteVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortConstant.CreateConstant(System.Int16)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ShortConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortVariable.SetValue(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortVariable.SetValueInternal(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortVariable.CreateVariable(System.Int16)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ShortVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ShortVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ShortVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringConstant.CreateConstant(System.String)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.StringConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.StringConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.StringConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringVariable.SetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringVariable.SetValueInternal(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringVariable.CreateVariable(System.String)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.StringVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.StringVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.StringVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntConstant.CreateConstant(System.UInt32)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UIntConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntVariable.SetValue(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntVariable.SetValueInternal(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntVariable.CreateVariable(System.UInt32)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UIntVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UIntVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UIntVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongConstant.CreateConstant(System.UInt64)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ULongConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongVariable.SetValue(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongVariable.SetValueInternal(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongVariable.CreateVariable(System.UInt64)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.ULongVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.ULongVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.ULongVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventConstant.CreateConstant(UnityEngine.Events.UnityEvent)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UnityEventConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UnityEventConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UnityEventConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventVariable.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventVariable.SetValueInternal(UnityEngine.Events.UnityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventVariable.CreateVariable(UnityEngine.Events.UnityEvent)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UnityEventVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UnityEventVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UnityEventVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortConstant.CreateConstant(System.UInt16)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UShortConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortVariable.SetValue(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortVariable.SetValueInternal(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortVariable.CreateVariable(System.UInt16)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.UShortVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.UShortVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.UShortVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Constant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Constant.CreateConstant(UnityEngine.Vector2)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2Constant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector2Constant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2Constant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntConstant.CreateConstant(UnityEngine.Vector2Int)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2IntConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector2IntConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2IntConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntVariable.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntVariable.SetValueInternal(UnityEngine.Vector2Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntVariable.CreateVariable(UnityEngine.Vector2Int)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2IntVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector2IntVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2IntVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Variable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Variable.SetValue(UnityEngine.Vector2)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Variable.SetValueInternal(UnityEngine.Vector2)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Variable.CreateVariable(UnityEngine.Vector2)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector2Variable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector2Variable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector2Variable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2Variable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Constant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Constant.CreateConstant(UnityEngine.Vector3)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3Constant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector3Constant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3Constant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntConstant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntConstant.CreateConstant(UnityEngine.Vector3Int)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3IntConstant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector3IntConstant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3IntConstant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntVariable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntVariable.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntVariable.SetValueInternal(UnityEngine.Vector3Int)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntVariable.CreateVariable(UnityEngine.Vector3Int)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3IntVariable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector3IntVariable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3IntVariable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntVariable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Variable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Variable.SetValue(UnityEngine.Vector3)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Variable.SetValueInternal(UnityEngine.Vector3)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Variable.CreateVariable(UnityEngine.Vector3)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector3Variable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector3Variable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector3Variable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3Variable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Constant.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Constant.CreateConstant(UnityEngine.Vector4)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector4Constant"/> with the given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector4Constant"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector4Constant"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Variable.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Variable.SetValue(UnityEngine.Vector4)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Variable.SetValueInternal(UnityEngine.Vector4)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Variable.CreateVariable(UnityEngine.Vector4)">
            <summary>
            Create a new <see cref="T:Enderlook.Unity.Atoms.Vector4Variable"/> with given value <paramref name="value"/>.
            </summary>
            <param name="value">Value of the new <see cref="T:Enderlook.Unity.Atoms.Vector4Variable"/>.</param>
            <returns>New instance of <see cref="T:Enderlook.Unity.Atoms.Vector4Variable"/>.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4Variable.CreateManagedPrototype">
            <summary>
            Create a prototype of this instance.
            </summary>
            <returns>Prototype of this instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetComponent.SetValue(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#Register(System.Action{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#Unregister(System.Action{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#Register(System.Action{System.Boolean,System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#Unregister(System.Action{System.Boolean,System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetSO.SetValue(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.SetValueInternal(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.SetValue(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#Register(System.Action{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#Unregister(System.Action{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Boolean}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#Register(System.Action{System.Boolean,System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#Unregister(System.Action{System.Boolean,System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Boolean}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Boolean})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetComponent.SetValue(System.Byte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#Register(System.Action{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#Unregister(System.Action{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#Register(System.Action{System.Byte,System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#Unregister(System.Action{System.Byte,System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetSO.SetValue(System.Byte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.SetValueInternal(System.Byte)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.SetValue(System.Byte)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#Register(System.Action{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#Unregister(System.Action{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Byte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#Register(System.Action{System.Byte,System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#Unregister(System.Action{System.Byte,System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Byte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Byte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetComponent.SetValue(System.Char)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Char}#Register(System.Action{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Char}#Unregister(System.Action{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Char}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Char}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#Register(System.Action{System.Char,System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#Unregister(System.Action{System.Char,System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetSO.SetValue(System.Char)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.SetValueInternal(System.Char)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.SetValue(System.Char)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Char}#Register(System.Action{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Char}#Unregister(System.Action{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Char}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Char}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#Register(System.Action{System.Char,System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#Unregister(System.Action{System.Char,System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Char}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Char})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetComponent.SetValue(UnityEngine.Collider2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#Register(System.Action{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#Unregister(System.Action{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#Register(System.Action{UnityEngine.Collider2D,UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#Unregister(System.Action{UnityEngine.Collider2D,UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetSO.SetValue(UnityEngine.Collider2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.SetValueInternal(UnityEngine.Collider2D)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.SetValue(UnityEngine.Collider2D)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#Register(System.Action{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#Unregister(System.Action{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#Register(System.Action{UnityEngine.Collider2D,UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#Unregister(System.Action{UnityEngine.Collider2D,UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetComponent.SetValue(UnityEngine.Collider)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#Register(System.Action{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#Unregister(System.Action{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#Register(System.Action{UnityEngine.Collider,UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#Unregister(System.Action{UnityEngine.Collider,UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetSO.SetValue(UnityEngine.Collider)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.SetValueInternal(UnityEngine.Collider)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.SetValue(UnityEngine.Collider)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#Register(System.Action{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#Unregister(System.Action{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Collider}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#Register(System.Action{UnityEngine.Collider,UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#Unregister(System.Action{UnityEngine.Collider,UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Collider}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Collider})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetComponent.SetValue(UnityEngine.Color)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#Register(System.Action{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#Unregister(System.Action{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#Register(System.Action{UnityEngine.Color,UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#Unregister(System.Action{UnityEngine.Color,UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetSO.SetValue(UnityEngine.Color)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.SetValueInternal(UnityEngine.Color)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.SetValue(UnityEngine.Color)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#Register(System.Action{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#Unregister(System.Action{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Color}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#Register(System.Action{UnityEngine.Color,UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#Unregister(System.Action{UnityEngine.Color,UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Color}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Color})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetComponent.SetValue(System.Decimal)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#Register(System.Action{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#Unregister(System.Action{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#Register(System.Action{System.Decimal,System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#Unregister(System.Action{System.Decimal,System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetSO.SetValue(System.Decimal)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.SetValueInternal(System.Decimal)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.SetValue(System.Decimal)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#Register(System.Action{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#Unregister(System.Action{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Decimal}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#Register(System.Action{System.Decimal,System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#Unregister(System.Action{System.Decimal,System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Decimal}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Decimal})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetComponent.SetValue(System.Double)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Double}#Register(System.Action{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Double}#Unregister(System.Action{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Double}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Double}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#Register(System.Action{System.Double,System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#Unregister(System.Action{System.Double,System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetSO.SetValue(System.Double)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.SetValueInternal(System.Double)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.SetValue(System.Double)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Double}#Register(System.Action{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Double}#Unregister(System.Action{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Double}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Double}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#Register(System.Action{System.Double,System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#Unregister(System.Action{System.Double,System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Double}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Double})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetComponent.SetValue(System.Single)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Single}#Register(System.Action{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Single}#Unregister(System.Action{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Single}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Single}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#Register(System.Action{System.Single,System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#Unregister(System.Action{System.Single,System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetSO.SetValue(System.Single)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.SetValueInternal(System.Single)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.SetValue(System.Single)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Single}#Register(System.Action{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Single}#Unregister(System.Action{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Single}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Single}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#Register(System.Action{System.Single,System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#Unregister(System.Action{System.Single,System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Single}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Single})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetComponent.SetValue(UnityEngine.GameObject)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#Register(System.Action{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#Unregister(System.Action{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#Register(System.Action{UnityEngine.GameObject,UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#Unregister(System.Action{UnityEngine.GameObject,UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetSO.SetValue(UnityEngine.GameObject)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.SetValueInternal(UnityEngine.GameObject)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.SetValue(UnityEngine.GameObject)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#Register(System.Action{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#Unregister(System.Action{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#GameObject}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#Register(System.Action{UnityEngine.GameObject,UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#Unregister(System.Action{UnityEngine.GameObject,UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#GameObject}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.GameObject})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetComponent.SetValue(System.Int32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#Register(System.Action{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#Unregister(System.Action{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#Register(System.Action{System.Int32,System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#Unregister(System.Action{System.Int32,System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetSO.SetValue(System.Int32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.SetValueInternal(System.Int32)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.SetValue(System.Int32)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#Register(System.Action{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#Unregister(System.Action{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#Register(System.Action{System.Int32,System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#Unregister(System.Action{System.Int32,System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetComponent.SetValue(UnityEngine.LayerMask)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#Register(System.Action{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#Unregister(System.Action{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#Register(System.Action{UnityEngine.LayerMask,UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#Unregister(System.Action{UnityEngine.LayerMask,UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetSO.SetValue(UnityEngine.LayerMask)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.SetValueInternal(UnityEngine.LayerMask)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.SetValue(UnityEngine.LayerMask)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#Register(System.Action{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#Unregister(System.Action{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#LayerMask}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#Register(System.Action{UnityEngine.LayerMask,UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#Unregister(System.Action{UnityEngine.LayerMask,UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#LayerMask}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.LayerMask})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetComponent.SetValue(System.Int64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#Register(System.Action{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#Unregister(System.Action{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#Register(System.Action{System.Int64,System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#Unregister(System.Action{System.Int64,System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetSO.SetValue(System.Int64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.SetValueInternal(System.Int64)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.SetValue(System.Int64)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#Register(System.Action{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#Unregister(System.Action{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#Register(System.Action{System.Int64,System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#Unregister(System.Action{System.Int64,System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetComponent.SetValue(UnityEngine.Quaternion)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#Register(System.Action{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#Unregister(System.Action{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#Register(System.Action{UnityEngine.Quaternion,UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#Unregister(System.Action{UnityEngine.Quaternion,UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetSO.SetValue(UnityEngine.Quaternion)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.SetValueInternal(UnityEngine.Quaternion)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.SetValue(UnityEngine.Quaternion)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#Register(System.Action{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#Unregister(System.Action{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Quaternion}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#Register(System.Action{UnityEngine.Quaternion,UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#Unregister(System.Action{UnityEngine.Quaternion,UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Quaternion}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Quaternion})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetComponent.SetValue(UnityEngine.Rect)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#Register(System.Action{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#Unregister(System.Action{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#Register(System.Action{UnityEngine.Rect,UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#Unregister(System.Action{UnityEngine.Rect,UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetSO.SetValue(UnityEngine.Rect)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.SetValueInternal(UnityEngine.Rect)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.SetValue(UnityEngine.Rect)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#Register(System.Action{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#Unregister(System.Action{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rect}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#Register(System.Action{UnityEngine.Rect,UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#Unregister(System.Action{UnityEngine.Rect,UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rect}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rect})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetComponent.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#Register(System.Action{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#Unregister(System.Action{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#Register(System.Action{UnityEngine.Rigidbody2D,UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#Unregister(System.Action{UnityEngine.Rigidbody2D,UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetSO.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.SetValueInternal(UnityEngine.Rigidbody2D)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#Register(System.Action{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#Unregister(System.Action{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#Register(System.Action{UnityEngine.Rigidbody2D,UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#Unregister(System.Action{UnityEngine.Rigidbody2D,UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody2D}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody2D})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetComponent.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#Register(System.Action{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#Unregister(System.Action{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#Register(System.Action{UnityEngine.Rigidbody,UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#Unregister(System.Action{UnityEngine.Rigidbody,UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetSO.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.SetValueInternal(UnityEngine.Rigidbody)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#Register(System.Action{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#Unregister(System.Action{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Rigidbody}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#Register(System.Action{UnityEngine.Rigidbody,UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#Unregister(System.Action{UnityEngine.Rigidbody,UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Rigidbody}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Rigidbody})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetComponent.SetValue(System.SByte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#Register(System.Action{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#Unregister(System.Action{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#Register(System.Action{System.SByte,System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#Unregister(System.Action{System.SByte,System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetSO.SetValue(System.SByte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.SetValueInternal(System.SByte)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.SetValue(System.SByte)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#Register(System.Action{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#Unregister(System.Action{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#SByte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#Register(System.Action{System.SByte,System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#Unregister(System.Action{System.SByte,System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#SByte}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.SByte})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetComponent.SetValue(System.Int16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#Register(System.Action{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#Unregister(System.Action{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#Register(System.Action{System.Int16,System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#Unregister(System.Action{System.Int16,System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetSO.SetValue(System.Int16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.SetValueInternal(System.Int16)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.SetValue(System.Int16)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#Register(System.Action{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#Unregister(System.Action{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#Int16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#Register(System.Action{System.Int16,System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#Unregister(System.Action{System.Int16,System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#Int16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.Int16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetComponent.SetValue(System.String)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#String}#Register(System.Action{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#String}#Unregister(System.Action{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#String}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#String}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#String}#Register(System.Action{System.String,System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#String}#Unregister(System.Action{System.String,System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#String}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#String}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetSO.SetValue(System.String)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.SetValueInternal(System.String)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.SetValue(System.String)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#String}#Register(System.Action{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#String}#Unregister(System.Action{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#String}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#String}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#String}#Register(System.Action{System.String,System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#String}#Unregister(System.Action{System.String,System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#String}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#String}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.String})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetComponent.SetValue(System.UInt32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#Register(System.Action{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#Unregister(System.Action{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#Register(System.Action{System.UInt32,System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#Unregister(System.Action{System.UInt32,System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetSO.SetValue(System.UInt32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.SetValueInternal(System.UInt32)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.SetValue(System.UInt32)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#Register(System.Action{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#Unregister(System.Action{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#Register(System.Action{System.UInt32,System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#Unregister(System.Action{System.UInt32,System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt32}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt32})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetComponent.SetValue(System.UInt64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#Register(System.Action{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#Unregister(System.Action{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#Register(System.Action{System.UInt64,System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#Unregister(System.Action{System.UInt64,System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetSO.SetValue(System.UInt64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.SetValueInternal(System.UInt64)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.SetValue(System.UInt64)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#Register(System.Action{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#Unregister(System.Action{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#Register(System.Action{System.UInt64,System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#Unregister(System.Action{System.UInt64,System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt64}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt64})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetComponent.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#Register(System.Action{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#Unregister(System.Action{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#Register(System.Action{UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#Unregister(System.Action{UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetSO.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.SetValueInternal(UnityEngine.Events.UnityEvent)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#Register(System.Action{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#Unregister(System.Action{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Events#UnityEvent}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#Register(System.Action{UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#Unregister(System.Action{UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Events#UnityEvent}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Events.UnityEvent})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetComponent.SetValue(System.UInt16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#Register(System.Action{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#Unregister(System.Action{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#Register(System.Action{System.UInt16,System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#Unregister(System.Action{System.UInt16,System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetSO.SetValue(System.UInt16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.SetValueInternal(System.UInt16)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.SetValue(System.UInt16)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#Register(System.Action{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#Unregister(System.Action{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister{System#UInt16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#Register(System.Action{System.UInt16,System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#Unregister(System.Action{System.UInt16,System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedSO.Enderlook#Unity#Atoms#IEventRegister2{System#UInt16}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{System.UInt16})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetComponent.SetValue(UnityEngine.Vector2)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#Register(System.Action{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#Unregister(System.Action{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#Register(System.Action{UnityEngine.Vector2,UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#Unregister(System.Action{UnityEngine.Vector2,UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetComponent.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#Register(System.Action{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#Unregister(System.Action{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#Register(System.Action{UnityEngine.Vector2Int,UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#Unregister(System.Action{UnityEngine.Vector2Int,UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetSO.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.SetValueInternal(UnityEngine.Vector2Int)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#Register(System.Action{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#Unregister(System.Action{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#Register(System.Action{UnityEngine.Vector2Int,UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#Unregister(System.Action{UnityEngine.Vector2Int,UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetSO.SetValue(UnityEngine.Vector2)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.SetValueInternal(UnityEngine.Vector2)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.SetValue(UnityEngine.Vector2)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#Register(System.Action{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#Unregister(System.Action{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector2}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#Register(System.Action{UnityEngine.Vector2,UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#Unregister(System.Action{UnityEngine.Vector2,UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector2}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector2})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetComponent.SetValue(UnityEngine.Vector3)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#Register(System.Action{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#Unregister(System.Action{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#Register(System.Action{UnityEngine.Vector3,UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#Unregister(System.Action{UnityEngine.Vector3,UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetComponent.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#Register(System.Action{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#Unregister(System.Action{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#Register(System.Action{UnityEngine.Vector3Int,UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#Unregister(System.Action{UnityEngine.Vector3Int,UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetSO.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.SetValueInternal(UnityEngine.Vector3Int)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#Register(System.Action{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#Unregister(System.Action{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#Register(System.Action{UnityEngine.Vector3Int,UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#Unregister(System.Action{UnityEngine.Vector3Int,UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3Int}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3Int})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetSO.SetValue(UnityEngine.Vector3)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.SetValueInternal(UnityEngine.Vector3)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.SetValue(UnityEngine.Vector3)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#Register(System.Action{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#Unregister(System.Action{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector3}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#Register(System.Action{UnityEngine.Vector3,UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#Unregister(System.Action{UnityEngine.Vector3,UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector3}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector3})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetComponent.SetValue(UnityEngine.Vector4)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedComponent.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedComponent.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedComponent.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Reset(System.Boolean)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#Register(System.Action{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#Unregister(System.Action{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#Register(System.Action{UnityEngine.Vector4,UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#Unregister(System.Action{UnityEngine.Vector4,UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedComponent.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetSO.SetValue(UnityEngine.Vector4)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetSO.CreateGetSetPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedSO.Changed">
            <summary>
            Event raised when value is changed. The parameter is the new value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedSO.ChangedWithHistory">
            <summary>
            Event raised when value is changed. The first parameter is the new value, the second parameter is the old value.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedSO.InitialValue">
            <inheritdoc cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Reset(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.SetValueInternal(UnityEngine.Vector4)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.SetValue(UnityEngine.Vector4)">
            <inheritdoc cref="T:Enderlook.Unity.Atoms.IManaged`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.CreateManagedPrototype">
            <summary>
            Create a deep prototype of this current instance.
            </summary>
            <returns>A deep prototype of this current instance.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.CreateGetSetPrototype">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#Register(System.Action{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#Unregister(System.Action{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#RegisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister{UnityEngine#Vector4}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#Register(System.Action{UnityEngine.Vector4,UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#Unregister(System.Action{UnityEngine.Vector4,UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#RegisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedSO.Enderlook#Unity#Atoms#IEventRegister2{UnityEngine#Vector4}#UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{UnityEngine.Vector4})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetInstancer.SetValue(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.BoolManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolManagedInstancer.SetValue(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetInstancer.SetValue(System.Byte)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ByteManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteManagedInstancer.SetValue(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetInstancer.SetValue(System.Char)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.CharManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharManagedInstancer.SetValue(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetInstancer.SetValue(UnityEngine.Collider2D)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Collider2DManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DManagedInstancer.SetValue(UnityEngine.Collider2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetInstancer.SetValue(UnityEngine.Collider)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColliderManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderManagedInstancer.SetValue(UnityEngine.Collider)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetInstancer.SetValue(UnityEngine.Color)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ColorManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorManagedInstancer.SetValue(UnityEngine.Color)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetInstancer.SetValue(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DecimalManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalManagedInstancer.SetValue(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetInstancer.SetValue(System.Double)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.DoubleManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleManagedInstancer.SetValue(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetInstancer.SetValue(System.Single)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.FloatManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatManagedInstancer.SetValue(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetInstancer.SetValue(UnityEngine.GameObject)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.GameObjectManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectManagedInstancer.SetValue(UnityEngine.GameObject)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetInstancer.SetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.IntManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntManagedInstancer.SetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetInstancer.SetValue(UnityEngine.LayerMask)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskManagedInstancer.SetValue(UnityEngine.LayerMask)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetInstancer.SetValue(System.Int64)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.LongManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongManagedInstancer.SetValue(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetInstancer.SetValue(UnityEngine.Quaternion)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.QuaternionManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionManagedInstancer.SetValue(UnityEngine.Quaternion)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetInstancer.SetValue(UnityEngine.Rect)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RectManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectManagedInstancer.SetValue(UnityEngine.Rect)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetInstancer.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DManagedInstancer.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetInstancer.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyManagedInstancer.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetInstancer.SetValue(System.SByte)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.SByteManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteManagedInstancer.SetValue(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetInstancer.SetValue(System.Int16)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ShortManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortManagedInstancer.SetValue(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetInstancer.SetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.StringManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringManagedInstancer.SetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetInstancer.SetValue(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UIntManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntManagedInstancer.SetValue(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetInstancer.SetValue(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.ULongManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongManagedInstancer.SetValue(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetInstancer.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UnityEventManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventManagedInstancer.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetInstancer.SetValue(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.UShortManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortManagedInstancer.SetValue(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetInstancer.SetValue(UnityEngine.Vector2)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetInstancer.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntManagedInstancer.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector2ManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2ManagedInstancer.SetValue(UnityEngine.Vector2)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetInstancer.SetValue(UnityEngine.Vector3)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetInstancer.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntManagedInstancer.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector3ManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3ManagedInstancer.SetValue(UnityEngine.Vector3)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetInstancer.SetValue(UnityEngine.Vector4)">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedInstancer.InitialValue">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedInstancer.Changed">
            <inheritdoc />
        </member>
        <member name="P:Enderlook.Unity.Atoms.Vector4ManagedInstancer.ChangedWithHistory">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedInstancer.GetValue">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedInstancer.Reset(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4ManagedInstancer.SetValue(UnityEngine.Vector4)">
            <inheritdoc />
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetReference.#ctor(System.Boolean)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetReference.#ctor(Enderlook.Unity.Atoms.BoolGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.BoolGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetReference.#ctor(Enderlook.Unity.Atoms.BoolGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.BoolGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetReference.op_Implicit(Enderlook.Unity.Atoms.BoolGetReference)~System.Boolean">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.BoolGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.SetValue(System.Boolean)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.#ctor(System.Boolean)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.#ctor(Enderlook.Unity.Atoms.BoolGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.BoolGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.#ctor(Enderlook.Unity.Atoms.BoolGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.BoolGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.BoolGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.BoolGetSetReference.op_Implicit(Enderlook.Unity.Atoms.BoolGetSetReference)~System.Boolean">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.BoolGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetReference.#ctor(System.Byte)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetReference.#ctor(Enderlook.Unity.Atoms.ByteGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ByteGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetReference.#ctor(Enderlook.Unity.Atoms.ByteGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ByteGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetReference.op_Implicit(Enderlook.Unity.Atoms.ByteGetReference)~System.Byte">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ByteGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.SetValue(System.Byte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.#ctor(System.Byte)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.#ctor(Enderlook.Unity.Atoms.ByteGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ByteGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.#ctor(Enderlook.Unity.Atoms.ByteGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ByteGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ByteGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ByteGetSetReference.op_Implicit(Enderlook.Unity.Atoms.ByteGetSetReference)~System.Byte">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ByteGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetReference.#ctor(System.Char)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetReference.#ctor(Enderlook.Unity.Atoms.CharGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.CharGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetReference.#ctor(Enderlook.Unity.Atoms.CharGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.CharGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetReference.op_Implicit(Enderlook.Unity.Atoms.CharGetReference)~System.Char">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.CharGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.SetValue(System.Char)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.#ctor(System.Char)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.#ctor(Enderlook.Unity.Atoms.CharGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.CharGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.#ctor(Enderlook.Unity.Atoms.CharGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.CharGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.CharGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.CharGetSetReference.op_Implicit(Enderlook.Unity.Atoms.CharGetSetReference)~System.Char">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.CharGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetReference.#ctor(UnityEngine.Collider2D)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetReference.#ctor(Enderlook.Unity.Atoms.Collider2DGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Collider2DGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetReference.#ctor(Enderlook.Unity.Atoms.Collider2DGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Collider2DGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetReference.op_Implicit(Enderlook.Unity.Atoms.Collider2DGetReference)~UnityEngine.Collider2D">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Collider2DGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.SetValue(UnityEngine.Collider2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.#ctor(UnityEngine.Collider2D)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.#ctor(Enderlook.Unity.Atoms.Collider2DGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Collider2DGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.#ctor(Enderlook.Unity.Atoms.Collider2DGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Collider2DGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Collider2DGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.op_Implicit(Enderlook.Unity.Atoms.Collider2DGetSetReference)~UnityEngine.Collider2D">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Collider2DGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetReference.#ctor(UnityEngine.Collider)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetReference.#ctor(Enderlook.Unity.Atoms.ColliderGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColliderGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetReference.#ctor(Enderlook.Unity.Atoms.ColliderGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColliderGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetReference.op_Implicit(Enderlook.Unity.Atoms.ColliderGetReference)~UnityEngine.Collider">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ColliderGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.SetValue(UnityEngine.Collider)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.#ctor(UnityEngine.Collider)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.#ctor(Enderlook.Unity.Atoms.ColliderGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColliderGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.#ctor(Enderlook.Unity.Atoms.ColliderGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColliderGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColliderGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColliderGetSetReference.op_Implicit(Enderlook.Unity.Atoms.ColliderGetSetReference)~UnityEngine.Collider">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ColliderGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetReference.#ctor(UnityEngine.Color)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetReference.#ctor(Enderlook.Unity.Atoms.ColorGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColorGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetReference.#ctor(Enderlook.Unity.Atoms.ColorGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColorGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetReference.op_Implicit(Enderlook.Unity.Atoms.ColorGetReference)~UnityEngine.Color">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ColorGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.SetValue(UnityEngine.Color)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.#ctor(UnityEngine.Color)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.#ctor(Enderlook.Unity.Atoms.ColorGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColorGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.#ctor(Enderlook.Unity.Atoms.ColorGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ColorGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ColorGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ColorGetSetReference.op_Implicit(Enderlook.Unity.Atoms.ColorGetSetReference)~UnityEngine.Color">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ColorGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetReference.#ctor(System.Decimal)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetReference.#ctor(Enderlook.Unity.Atoms.DecimalGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DecimalGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetReference.#ctor(Enderlook.Unity.Atoms.DecimalGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DecimalGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetReference.op_Implicit(Enderlook.Unity.Atoms.DecimalGetReference)~System.Decimal">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.DecimalGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.SetValue(System.Decimal)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.#ctor(System.Decimal)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.#ctor(Enderlook.Unity.Atoms.DecimalGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DecimalGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.#ctor(Enderlook.Unity.Atoms.DecimalGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DecimalGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DecimalGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DecimalGetSetReference.op_Implicit(Enderlook.Unity.Atoms.DecimalGetSetReference)~System.Decimal">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.DecimalGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetReference.#ctor(System.Double)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetReference.#ctor(Enderlook.Unity.Atoms.DoubleGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DoubleGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetReference.#ctor(Enderlook.Unity.Atoms.DoubleGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DoubleGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetReference.op_Implicit(Enderlook.Unity.Atoms.DoubleGetReference)~System.Double">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.DoubleGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.SetValue(System.Double)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.#ctor(System.Double)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.#ctor(Enderlook.Unity.Atoms.DoubleGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DoubleGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.#ctor(Enderlook.Unity.Atoms.DoubleGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.DoubleGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.DoubleGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.DoubleGetSetReference.op_Implicit(Enderlook.Unity.Atoms.DoubleGetSetReference)~System.Double">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.DoubleGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetReference.#ctor(System.Single)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetReference.#ctor(Enderlook.Unity.Atoms.FloatGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.FloatGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetReference.#ctor(Enderlook.Unity.Atoms.FloatGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.FloatGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetReference.op_Implicit(Enderlook.Unity.Atoms.FloatGetReference)~System.Single">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.FloatGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.SetValue(System.Single)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.#ctor(System.Single)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.#ctor(Enderlook.Unity.Atoms.FloatGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.FloatGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.#ctor(Enderlook.Unity.Atoms.FloatGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.FloatGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.FloatGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.FloatGetSetReference.op_Implicit(Enderlook.Unity.Atoms.FloatGetSetReference)~System.Single">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.FloatGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetReference.#ctor(UnityEngine.GameObject)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetReference.#ctor(Enderlook.Unity.Atoms.GameObjectGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.GameObjectGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetReference.#ctor(Enderlook.Unity.Atoms.GameObjectGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.GameObjectGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetReference.op_Implicit(Enderlook.Unity.Atoms.GameObjectGetReference)~UnityEngine.GameObject">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.GameObjectGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.SetValue(UnityEngine.GameObject)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.#ctor(UnityEngine.GameObject)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.#ctor(Enderlook.Unity.Atoms.GameObjectGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.GameObjectGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.#ctor(Enderlook.Unity.Atoms.GameObjectGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.GameObjectGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.GameObjectGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.op_Implicit(Enderlook.Unity.Atoms.GameObjectGetSetReference)~UnityEngine.GameObject">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.GameObjectGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetReference.#ctor(System.Int32)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetReference.#ctor(Enderlook.Unity.Atoms.IntGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.IntGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetReference.#ctor(Enderlook.Unity.Atoms.IntGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.IntGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetReference.op_Implicit(Enderlook.Unity.Atoms.IntGetReference)~System.Int32">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.IntGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.SetValue(System.Int32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.#ctor(System.Int32)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.#ctor(Enderlook.Unity.Atoms.IntGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.IntGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.#ctor(Enderlook.Unity.Atoms.IntGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.IntGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.IntGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IntGetSetReference.op_Implicit(Enderlook.Unity.Atoms.IntGetSetReference)~System.Int32">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.IntGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetReference.#ctor(UnityEngine.LayerMask)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetReference.#ctor(Enderlook.Unity.Atoms.LayerMaskGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LayerMaskGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetReference.#ctor(Enderlook.Unity.Atoms.LayerMaskGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LayerMaskGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetReference.op_Implicit(Enderlook.Unity.Atoms.LayerMaskGetReference)~UnityEngine.LayerMask">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.LayerMaskGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.SetValue(UnityEngine.LayerMask)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.#ctor(UnityEngine.LayerMask)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.#ctor(Enderlook.Unity.Atoms.LayerMaskGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LayerMaskGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.#ctor(Enderlook.Unity.Atoms.LayerMaskGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LayerMaskGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LayerMaskGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.op_Implicit(Enderlook.Unity.Atoms.LayerMaskGetSetReference)~UnityEngine.LayerMask">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.LayerMaskGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetReference.#ctor(System.Int64)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetReference.#ctor(Enderlook.Unity.Atoms.LongGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LongGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetReference.#ctor(Enderlook.Unity.Atoms.LongGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LongGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetReference.op_Implicit(Enderlook.Unity.Atoms.LongGetReference)~System.Int64">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.LongGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.SetValue(System.Int64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.#ctor(System.Int64)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.#ctor(Enderlook.Unity.Atoms.LongGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LongGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.#ctor(Enderlook.Unity.Atoms.LongGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.LongGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.LongGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.LongGetSetReference.op_Implicit(Enderlook.Unity.Atoms.LongGetSetReference)~System.Int64">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.LongGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetReference.#ctor(UnityEngine.Quaternion)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetReference.#ctor(Enderlook.Unity.Atoms.QuaternionGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.QuaternionGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetReference.#ctor(Enderlook.Unity.Atoms.QuaternionGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.QuaternionGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetReference.op_Implicit(Enderlook.Unity.Atoms.QuaternionGetReference)~UnityEngine.Quaternion">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.QuaternionGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.SetValue(UnityEngine.Quaternion)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.#ctor(UnityEngine.Quaternion)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.#ctor(Enderlook.Unity.Atoms.QuaternionGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.QuaternionGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.#ctor(Enderlook.Unity.Atoms.QuaternionGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.QuaternionGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.QuaternionGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.op_Implicit(Enderlook.Unity.Atoms.QuaternionGetSetReference)~UnityEngine.Quaternion">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.QuaternionGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetReference.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetReference.#ctor(Enderlook.Unity.Atoms.RectGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RectGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetReference.#ctor(Enderlook.Unity.Atoms.RectGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RectGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetReference.op_Implicit(Enderlook.Unity.Atoms.RectGetReference)~UnityEngine.Rect">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.RectGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.SetValue(UnityEngine.Rect)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.#ctor(UnityEngine.Rect)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.#ctor(Enderlook.Unity.Atoms.RectGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RectGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.#ctor(Enderlook.Unity.Atoms.RectGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RectGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RectGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RectGetSetReference.op_Implicit(Enderlook.Unity.Atoms.RectGetSetReference)~UnityEngine.Rect">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.RectGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.#ctor(UnityEngine.Rigidbody2D)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.#ctor(Enderlook.Unity.Atoms.Rigidbody2DGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.#ctor(Enderlook.Unity.Atoms.Rigidbody2DGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.op_Implicit(Enderlook.Unity.Atoms.Rigidbody2DGetReference)~UnityEngine.Rigidbody2D">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Rigidbody2DGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.SetValue(UnityEngine.Rigidbody2D)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.#ctor(UnityEngine.Rigidbody2D)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.#ctor(Enderlook.Unity.Atoms.Rigidbody2DGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.#ctor(Enderlook.Unity.Atoms.Rigidbody2DGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Rigidbody2DGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.op_Implicit(Enderlook.Unity.Atoms.Rigidbody2DGetSetReference)~UnityEngine.Rigidbody2D">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Rigidbody2DGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetReference.#ctor(UnityEngine.Rigidbody)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetReference.#ctor(Enderlook.Unity.Atoms.RigidbodyGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RigidbodyGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetReference.#ctor(Enderlook.Unity.Atoms.RigidbodyGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RigidbodyGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetReference.op_Implicit(Enderlook.Unity.Atoms.RigidbodyGetReference)~UnityEngine.Rigidbody">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.RigidbodyGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.SetValue(UnityEngine.Rigidbody)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.#ctor(UnityEngine.Rigidbody)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.#ctor(Enderlook.Unity.Atoms.RigidbodyGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RigidbodyGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.#ctor(Enderlook.Unity.Atoms.RigidbodyGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.RigidbodyGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.RigidbodyGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.op_Implicit(Enderlook.Unity.Atoms.RigidbodyGetSetReference)~UnityEngine.Rigidbody">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.RigidbodyGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetReference.#ctor(System.SByte)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetReference.#ctor(Enderlook.Unity.Atoms.SByteGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.SByteGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetReference.#ctor(Enderlook.Unity.Atoms.SByteGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.SByteGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetReference.op_Implicit(Enderlook.Unity.Atoms.SByteGetReference)~System.SByte">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.SByteGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.SetValue(System.SByte)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.#ctor(System.SByte)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.#ctor(Enderlook.Unity.Atoms.SByteGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.SByteGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.#ctor(Enderlook.Unity.Atoms.SByteGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.SByteGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.SByteGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.SByteGetSetReference.op_Implicit(Enderlook.Unity.Atoms.SByteGetSetReference)~System.SByte">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.SByteGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetReference.#ctor(System.Int16)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetReference.#ctor(Enderlook.Unity.Atoms.ShortGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ShortGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetReference.#ctor(Enderlook.Unity.Atoms.ShortGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ShortGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetReference.op_Implicit(Enderlook.Unity.Atoms.ShortGetReference)~System.Int16">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ShortGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.SetValue(System.Int16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.#ctor(System.Int16)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.#ctor(Enderlook.Unity.Atoms.ShortGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ShortGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.#ctor(Enderlook.Unity.Atoms.ShortGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ShortGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ShortGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ShortGetSetReference.op_Implicit(Enderlook.Unity.Atoms.ShortGetSetReference)~System.Int16">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ShortGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetReference.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetReference.#ctor(Enderlook.Unity.Atoms.StringGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.StringGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetReference.#ctor(Enderlook.Unity.Atoms.StringGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.StringGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetReference.op_Implicit(Enderlook.Unity.Atoms.StringGetReference)~System.String">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.StringGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.SetValue(System.String)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.#ctor(Enderlook.Unity.Atoms.StringGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.StringGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.#ctor(Enderlook.Unity.Atoms.StringGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.StringGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.StringGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.StringGetSetReference.op_Implicit(Enderlook.Unity.Atoms.StringGetSetReference)~System.String">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.StringGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetReference.#ctor(System.UInt32)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetReference.#ctor(Enderlook.Unity.Atoms.UIntGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UIntGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetReference.#ctor(Enderlook.Unity.Atoms.UIntGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UIntGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetReference.op_Implicit(Enderlook.Unity.Atoms.UIntGetReference)~System.UInt32">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UIntGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.SetValue(System.UInt32)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.#ctor(System.UInt32)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.#ctor(Enderlook.Unity.Atoms.UIntGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UIntGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.#ctor(Enderlook.Unity.Atoms.UIntGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UIntGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UIntGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UIntGetSetReference.op_Implicit(Enderlook.Unity.Atoms.UIntGetSetReference)~System.UInt32">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UIntGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetReference.#ctor(System.UInt64)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetReference.#ctor(Enderlook.Unity.Atoms.ULongGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ULongGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetReference.#ctor(Enderlook.Unity.Atoms.ULongGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ULongGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetReference.op_Implicit(Enderlook.Unity.Atoms.ULongGetReference)~System.UInt64">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ULongGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.SetValue(System.UInt64)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.#ctor(System.UInt64)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.#ctor(Enderlook.Unity.Atoms.ULongGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ULongGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.#ctor(Enderlook.Unity.Atoms.ULongGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.ULongGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.ULongGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.ULongGetSetReference.op_Implicit(Enderlook.Unity.Atoms.ULongGetSetReference)~System.UInt64">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.ULongGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetReference.#ctor(UnityEngine.Events.UnityEvent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetReference.#ctor(Enderlook.Unity.Atoms.UnityEventGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UnityEventGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetReference.#ctor(Enderlook.Unity.Atoms.UnityEventGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UnityEventGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetReference.op_Implicit(Enderlook.Unity.Atoms.UnityEventGetReference)~UnityEngine.Events.UnityEvent">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UnityEventGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.SetValue(UnityEngine.Events.UnityEvent)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.#ctor(UnityEngine.Events.UnityEvent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.#ctor(Enderlook.Unity.Atoms.UnityEventGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UnityEventGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.#ctor(Enderlook.Unity.Atoms.UnityEventGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UnityEventGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UnityEventGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.op_Implicit(Enderlook.Unity.Atoms.UnityEventGetSetReference)~UnityEngine.Events.UnityEvent">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UnityEventGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetReference.#ctor(System.UInt16)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetReference.#ctor(Enderlook.Unity.Atoms.UShortGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UShortGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetReference.#ctor(Enderlook.Unity.Atoms.UShortGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UShortGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetReference.op_Implicit(Enderlook.Unity.Atoms.UShortGetReference)~System.UInt16">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UShortGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.SetValue(System.UInt16)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.#ctor(System.UInt16)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.#ctor(Enderlook.Unity.Atoms.UShortGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UShortGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.#ctor(Enderlook.Unity.Atoms.UShortGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.UShortGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.UShortGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.UShortGetSetReference.op_Implicit(Enderlook.Unity.Atoms.UShortGetSetReference)~System.UInt16">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.UShortGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetReference.#ctor(UnityEngine.Vector2)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetReference.#ctor(Enderlook.Unity.Atoms.Vector2GetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2GetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetReference.#ctor(Enderlook.Unity.Atoms.Vector2GetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2GetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetReference.op_Implicit(Enderlook.Unity.Atoms.Vector2GetReference)~UnityEngine.Vector2">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector2GetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.SetValue(UnityEngine.Vector2)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.#ctor(UnityEngine.Vector2)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector2GetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2GetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector2GetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2GetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2GetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2GetSetReference.op_Implicit(Enderlook.Unity.Atoms.Vector2GetSetReference)~UnityEngine.Vector2">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector2GetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetReference.#ctor(UnityEngine.Vector2Int)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetReference.#ctor(Enderlook.Unity.Atoms.Vector2IntGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2IntGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetReference.#ctor(Enderlook.Unity.Atoms.Vector2IntGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2IntGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetReference.op_Implicit(Enderlook.Unity.Atoms.Vector2IntGetReference)~UnityEngine.Vector2Int">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector2IntGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.SetValue(UnityEngine.Vector2Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.#ctor(UnityEngine.Vector2Int)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.#ctor(Enderlook.Unity.Atoms.Vector2IntGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2IntGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.#ctor(Enderlook.Unity.Atoms.Vector2IntGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector2IntGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector2IntGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.op_Implicit(Enderlook.Unity.Atoms.Vector2IntGetSetReference)~UnityEngine.Vector2Int">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector2IntGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetReference.#ctor(UnityEngine.Vector3)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetReference.#ctor(Enderlook.Unity.Atoms.Vector3GetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3GetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetReference.#ctor(Enderlook.Unity.Atoms.Vector3GetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3GetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetReference.op_Implicit(Enderlook.Unity.Atoms.Vector3GetReference)~UnityEngine.Vector3">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector3GetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.SetValue(UnityEngine.Vector3)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.#ctor(UnityEngine.Vector3)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector3GetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3GetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector3GetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3GetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3GetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3GetSetReference.op_Implicit(Enderlook.Unity.Atoms.Vector3GetSetReference)~UnityEngine.Vector3">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector3GetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetReference.#ctor(UnityEngine.Vector3Int)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetReference.#ctor(Enderlook.Unity.Atoms.Vector3IntGetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3IntGetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetReference.#ctor(Enderlook.Unity.Atoms.Vector3IntGetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3IntGetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetReference.op_Implicit(Enderlook.Unity.Atoms.Vector3IntGetReference)~UnityEngine.Vector3Int">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector3IntGetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.SetValue(UnityEngine.Vector3Int)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.#ctor(UnityEngine.Vector3Int)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.#ctor(Enderlook.Unity.Atoms.Vector3IntGetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3IntGetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.#ctor(Enderlook.Unity.Atoms.Vector3IntGetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector3IntGetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector3IntGetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.op_Implicit(Enderlook.Unity.Atoms.Vector3IntGetSetReference)~UnityEngine.Vector3Int">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector3IntGetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetReference.#ctor(UnityEngine.Vector4)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetReference.#ctor(Enderlook.Unity.Atoms.Vector4GetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector4GetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetReference.#ctor(Enderlook.Unity.Atoms.Vector4GetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector4GetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetReference.op_Implicit(Enderlook.Unity.Atoms.Vector4GetReference)~UnityEngine.Vector4">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector4GetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.GetValue">
            <inheritdoc cref="M:Enderlook.Unity.Utils.Interfaces.IGet`1.GetValue"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.SetValue(UnityEngine.Vector4)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.#ctor(UnityEngine.Vector4)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Inline"/>.
            </summary>
            <param name="value">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector4GetSetSO)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetSetReference"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.ScriptableObject"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector4GetSetSO"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.#ctor(Enderlook.Unity.Atoms.Vector4GetSetComponent)">
            <summary>
            Creates an <see cref="T:Enderlook.Unity.Atoms.Vector4GetSetComponent"/> of mode <see cref="F:Enderlook.Unity.Atoms.BaseValueReference.ReferenceMode.Component"/>.
            </summary>
            <param name="value"><see cref="T:Enderlook.Unity.Atoms.Vector4GetSetComponent"/> to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Vector4GetSetReference.op_Implicit(Enderlook.Unity.Atoms.Vector4GetSetReference)~UnityEngine.Vector4">
            <summary>
            Extract the stored value from <see cref="M:Enderlook.Unity.Atoms.Vector4GetSetReference.GetValue"/>.
            </summary>
            <param name="instance">Instance where value will be get.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.AtomAction`1.Execute(`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IAction`1.Execute(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.AtomAction2`1.Execute(`0,`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IAction2`1.Execute(`0,`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IAction`1.Execute(`0)">
            <summary>
            Execute action.
            </summary>
            <param name="parameter">Parameter passed to the action.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IAction2`1.Execute(`0,`0)">
            <summary>
            Execute action.
            </summary>
            <param name="parameter1">First parameter passed to the action.</param>
            <param name="parameter2">Second parameter passed to the action.</param>
        </member>
        <member name="E:Enderlook.Unity.Atoms.Event`1.OnEvent">
            <summary>
            Event managed by this instance.
            </summary>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event`1.Register(System.Action{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event`1.Unregister(System.Action{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event`1.RaiseEvent(`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEvent`1.RaiseEvent(`0)" />
        </member>
        <member name="E:Enderlook.Unity.Atoms.Event2`1.OnEvent">
            <summary>
            Event managed by this instance.
            </summary>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event2`1.Register(System.Action{`0,`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event2`1.Unregister(System.Action{`0,`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.Event2`1.RaiseEvent(`0,`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEvent2`1.RaiseEvent(`0,`0)" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEvent`1.RaiseEvent(`0)">
            <summary>
            Execute event.
            </summary>
            <param name="parameter">Parameter passed to the event.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEvent2`1.RaiseEvent(`0,`0)">
            <summary>
            Execute event.
            </summary>
            <param name="parameter1">First parameter passed to the event.</param>
            <param name="parameter2">Second parameter passed to the event.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})">
            <summary>
            Register an action to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="action">Action to register.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})">
            <summary>
            Unregister an action to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="action">Action to unregister.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <summary>
            Register an listener to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="listener">Listener to register.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <summary>
            Unregister an listener to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="listener">Listener to unregister.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})">
            <summary>
            Register an action to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="action">Action to register.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})">
            <summary>
            Unregister an action to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="action">Action to unregister.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <summary>
            Register an listener to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="listener">Listener to register.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <summary>
            Unregister an listener to be called when <see cref="!:OnEvent"/> triggers.
            </summary>
            <param name="listener">Listener to unregister.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventListener`4.OnEventRaised(`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventListener`1.OnEventRaised(`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventListener2`4.OnEventRaised(`0,`0)">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventListener2`1.OnEventRaised(`0,`0)"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventListener`1.OnEventRaised(`0)">
            <summary>
            Executes the stored actions.
            </summary>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IEventListener2`1.OnEventRaised(`0,`0)">
            <summary>
            Executes the stored actions.
            </summary>
        </member>
        <member name="P:Enderlook.Unity.Atoms.EventReference`4.Event">
            <summary>
            Event stored by this reference.
            </summary>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference`4.Register(System.Action{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Register(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference`4.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference`4.Unregister(System.Action{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.Unregister(System.Action{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference`4.UnregisterListener(Enderlook.Unity.Atoms.IEventListener{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener{`0})"/>
        </member>
        <member name="P:Enderlook.Unity.Atoms.EventReference2`4.Event">
            <summary>
            Event stored by this reference.
            </summary>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference2`4.Register(System.Action{`0,`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Register(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference2`4.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.RegisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference2`4.Unregister(System.Action{`0,`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.Unregister(System.Action{`0,`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.EventReference2`4.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})">
            <inheritdoc cref="M:Enderlook.Unity.Atoms.IEventRegister2`1.UnregisterListener(Enderlook.Unity.Atoms.IEventListener2{`0})"/>
        </member>
        <member name="M:Enderlook.Unity.Atoms.Transformer`1.Transform(`0)">
            <summary>
            Executes the behavior of this instance.
            </summary>
            <param name="value">Parameter used to execute.</param>
            <returns>Result of execution.</returns>
        </member>
        <member name="M:Enderlook.Unity.Atoms.GetComponent`1.GetValue">
            <inheritdoc cref="T:Enderlook.Unity.Utils.Interfaces.IGet`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.GetSO`1.GetValue">
            <inheritdoc cref="T:Enderlook.Unity.Utils.Interfaces.IGet`1" />
        </member>
        <member name="M:Enderlook.Unity.Atoms.IGetSet`1.SetValue(`0)">
            <summary>
            Stores an value in this object.
            </summary>
            <param name="newValue">Value to store.</param>
        </member>
        <member name="M:Enderlook.Unity.Atoms.IManaged`1.Reset(System.Boolean)">
            <summary>
            Resets the value stored in this objects to <see cref="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue"/>.
            </summary>
            <param name="shouldTriggerEvents">Whenever it should trigger set events or not.</param>
        </member>
        <member name="P:Enderlook.Unity.Atoms.IManaged`1.InitialValue">
            <summary>
            Initial value of this variable.
            </summary>
        </member>
    </members>
</doc>
